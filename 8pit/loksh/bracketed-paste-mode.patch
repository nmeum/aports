https://marc.info/?l=openbsd-tech&m=161737611015124&w=2

diff --git a/edit.c b/edit.c
index 3089d19..4b6d450 100644
--- a/edit.c
+++ b/edit.c
@@ -150,12 +150,23 @@ x_puts(const char *s)
 		shf_putc(*s++, shl_out);
 }
 
+static void
+x_paste_mode(bool onoff)
+{
+	if (!Flag(FBBRACKETPASTE))
+		return;
+
+	printf((onoff) ? BRPASTE_INT : BRPASTE_DEINT);
+	fflush(stdout);
+}
+
 bool
 x_mode(bool onoff)
 {
 	static bool	x_cur_mode;
 	bool		prev;
 
+	x_paste_mode(onoff);
 	if (x_cur_mode == onoff)
 		return x_cur_mode;
 	prev = x_cur_mode;
diff --git a/edit.h b/edit.h
index 0b604cd..8cc774f 100644
--- a/edit.h
+++ b/edit.h
@@ -34,6 +34,12 @@ extern X_chars edchars;
 #define XCF_FULLPATH	BIT(2)	/* command completion: store full path */
 #define XCF_COMMAND_FILE (XCF_COMMAND|XCF_FILE)
 
+/* https://www.xfree86.org/4.7.0/ctlseqs.html#Bracketed%20Paste%20Mode */
+#define BRPASTE_INT	"\033[?2004h"
+#define BRPASTE_DEINT	"\033[?2004l"
+#define BRPASTE_PRE	kb_encode("^[[200~")
+#define BRPASTE_POST	kb_encode("^[[201~")
+
 /* edit.c */
 int	x_getc(void);
 void	x_flush(void);
diff --git a/emacs.c b/emacs.c
index 694c402..9613626 100644
--- a/emacs.c
+++ b/emacs.c
@@ -118,6 +118,7 @@ static	char	*xmp;		/* mark pointer */
 static	char	*killstack[KILLSIZE];
 static	int	killsp, killtp;
 static	int	x_literal_set;
+static	int	x_brack_paste;
 static	int	x_arg_set;
 static	char	*macro_args;
 static	int	prompt_skip;
@@ -203,6 +204,8 @@ static int	x_fold_lower(int);
 static int	x_fold_upper(int);
 static int	x_set_arg(int);
 static int	x_comment(int);
+static int	x_brack_paste_start(int);
+static int	x_brack_paste_end(int);
 #ifdef DEBUG
 static int	x_debug_info(int);
 #endif
@@ -260,6 +263,8 @@ static const struct x_ftab x_ftab[] = {
 	{ x_fold_upper,		"upcase-word",			XF_ARG },
 	{ x_set_arg,		"set-arg",			XF_NOBIND },
 	{ x_comment,		"comment",			0 },
+	{ x_brack_paste_start,	"bracketed-paste-start",	0 },
+	{ x_brack_paste_end,	"bracketed-paste-end",		0 },
 	{ 0, 0, 0 },
 #ifdef DEBUG
 	{ x_debug_info,		"debug-info",			0 },
@@ -316,6 +321,8 @@ x_emacs(char *buf, size_t len)
 	}
 
 	x_literal_set = 0;
+	x_brack_paste = 0;
+
 	x_arg = -1;
 	x_last_command = NULL;
 	while (1) {
@@ -353,6 +360,13 @@ x_emacs(char *buf, size_t len)
 			}
 		}
 
+		/* In bracketed paste mode only allow x_brack_paste_end,
+		 * to quit this mode, for all other commands insert a literal. */
+		if (x_brack_paste && (submatch == 1 && kmatch)) {
+			if (kmatch->ftab->xf_func != x_brack_paste_end)
+				submatch = 0;
+		}
+
 		if (submatch == 1 && kmatch) {
 			if (kmatch->ftab->xf_func == x_ins_string &&
 			    kmatch->args && !macro_args) {
@@ -1479,6 +1493,10 @@ x_init_emacs(void)
 
 	TAILQ_INIT(&kblist);
 
+	/* bracketed paste mode */
+	kb_add_string(x_brack_paste_start,	NULL, BRPASTE_PRE);
+	kb_add_string(x_brack_paste_end,	NULL, BRPASTE_POST);
+
 	/* man page order */
 	kb_add(x_abort,			CTRL('G'), 0);
 	kb_add(x_mv_back,		CTRL('B'), 0);
@@ -1984,6 +2002,21 @@ x_comment(int c)
 	return KSTD;
 }
 
+int
+x_brack_paste_start(int c)
+{
+	if (Flag(FBBRACKETPASTE))
+		x_brack_paste = 1;
+	return KSTD;
+}
+
+int
+x_brack_paste_end(int c)
+{
+	if (Flag(FBBRACKETPASTE))
+		x_brack_paste = 0;
+	return KSTD;
+}
 
 /* NAME:
  *      x_prev_histword - recover word from prev command
diff --git a/misc.c b/misc.c
index 9e6e9db..ae5a429 100644
--- a/misc.c
+++ b/misc.c
@@ -123,6 +123,9 @@ const struct option sh_options[] = {
 	 */
 	{ "allexport",	'a',		OF_ANY },
 	{ "braceexpand",  0,		OF_ANY }, /* non-standard */
+#ifdef EMACS
+	{ "bracket-paste", 0,		OF_ANY }, /* non-standard */
+#endif
 	{ "bgnice",	  0,		OF_ANY },
 	{ NULL,	'c',	    OF_CMDLINE },
 	{ "csh-history",  0,		OF_ANY }, /* non-standard */
diff --git a/sh.h b/sh.h
index 93beef3..652a1f6 100644
--- a/sh.h
+++ b/sh.h
@@ -134,6 +134,9 @@ extern const struct option sh_options[];
 enum sh_flag {
 	FEXPORT = 0,	/* -a: export all */
 	FBRACEEXPAND,	/* enable {} globbing */
+#ifdef EMACS
+	FBBRACKETPASTE,	/* bracketed paste mode */
+#endif
 	FBGNICE,	/* bgnice */
 	FCOMMAND,	/* -c: (invocation) execute specified command */
 	FCSHHISTORY,	/* csh-style history enabled */
